"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.APIInvocationHelper=void 0;const crypto_js_1=__importDefault(require("crypto-js")),https_1=__importDefault(require("https")),url_1=require("url"),LoginHelper_1=require("./LoginHelper");class APIInvocationHelper{static getSignedValuesForGetWithAccessToken(e,t,s,i){return this.calculateSign(e,t,"GET",s,!0,i)}static getSignedValuesForGetWithoutAccessToken(e,t,s){return this.calculateSign(e,t,"GET",s,!1)}static invokeTuyaIrApi(e,t,s,i,n,r){e.debug(`Calling endpoint ${s} with payload ${JSON.stringify(n)}`);const a=(new Date).getTime(),o=LoginHelper_1.LoginHelper.Instance(t,e).getAccessToken(),l="GET"===i?"":JSON.stringify(n),c=this.calculateSign(new url_1.URL(s),t,i,a,!0,o,l),u={url:s,method:i,headers:{client_id:t.tuyaAPIClientId,sign:c.signKey,t:a,access_token:o,sign_method:"HMAC-SHA256","Content-Type":"application/json"}},p=https_1.default.request(s,u,(t=>{let s="";t.on("data",(e=>{s+=e})),t.on("end",(()=>{if(200!=t.statusCode)e.error("Api call failed with response code "+t.statusCode);else{let t;try{t=JSON.parse(s)}catch(e){t={msg:`Unable to parse body because '${e}'`}}e.debug("API call successful.",s),r(t)}}))})).on("error",(t=>{e.error(t.message,t.stack),r({msg:`Failed to invoke API '${t.message}'`})}));p.write(JSON.stringify(n)),p.end()}static calculateSign(e,t,s,i,n,r="",a=""){const o={timestamp:i,signKey:""},l=this.stringToSign(e.search,e.pathname,s,a).signedUrl,c=n?t.tuyaAPIClientId+r+i+l:t.tuyaAPIClientId+i+l;return o.signKey=crypto_js_1.default.HmacSHA256(c,t.tuyaAPISecret).toString().toUpperCase(),o}static stringToSign(e,t,s,i=""){return{signedUrl:s+"\n"+crypto_js_1.default.SHA256(i)+"\n\n"+t+e,url:t+e}}}exports.APIInvocationHelper=APIInvocationHelper;